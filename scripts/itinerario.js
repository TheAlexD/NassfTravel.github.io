//! Variables para el correcto funcionamiento del sistema web
var Regulador = [1];

function generarCampos() {
    //* obtenemos los dias que se ingreso 
    const days = document.querySelector(`input[id="idias"]`).value;

    //! eliminara los divs internos que encuentre antes de limpiar los datos
    if (Regulador[0] > 1) {
        const FContainer2 = document.getElementById("autogenerated-events");
        while (FContainer2.firstChild) {
            FContainer2.removeChild(FContainer2.firstChild);
        }
        Regulador[0] = 1;
        Regulador.length = 1;
    }

    if (days !== "" && days >= 1) {
        //* Si la cantidad de dias es distinta o diferente a null
        const FContainer = document.getElementById("autogenerated-events");

        for (let APU = 1; APU <= days; APU++) {
            const NContainer = document.createElement("form");
            NContainer.id = `conteinerbody-${APU}`;
            NContainer.classList = `conteinerbody-${APU}`;
            NContainer.innerHTML = `
            <h5 for="dia" class="dia">Datos del Dia ${APU}</h5>

            <div class="fechax col-md-12">
                <div class="form-group">
                    <label for="lfecha" class="form-label">Fecha:</label>
                    <input type="date" id="ifecha${APU}" name="ifecha${APU}" class="form-control" required>
                </div>
            </div>

            <div id="generated-${APU}" class="generated-${APU} col-md-12">
                <div id="event-1" class="row">
                    <!-- Columna para la hora -->
                    <div class="col-6">
                        <div class="form-group">
                            <label for="lhora1">Hora: </label>
                            <input type="time" id="ihora1" name="ihora1" class="form-control"required>
                        </div>
                    </div>

                    <!-- Columna para la actividad -->
                    <div class="col-6">
                        <div class="form-group">
                            <label for="actividad1">Actividad: </label>
                            <input type="text" id="iactividad1" name="iactividad1" class="form-control"required>
                        </div>
                    </div>
                </div>
            </div>

            <div class="subgroup-buttons col-12">
                <button type="button" class="btn btn-primary" onclick="generarActividad(${APU})">Generar mas Actividades</button>
                <button type="button" class="btn btn-primary" onclick="eliminarActividad(${APU})">Eliminar la Actividad</button>
            </div>

            `;
            FContainer.appendChild(NContainer);
            Regulador.push(1);
            //* Añadimos un +1 al dato regulador posicion 0
            Regulador[0]++;
        }
    } else {
        alert("Ingrese dias para generar Campos")
    }
}

function generarActividad(pointer) {
    const GetContainer = document.getElementById(`generated-${pointer}`);
    const NewContainer = document.createElement("div");
    Regulador[pointer]++;
    NewContainer.id = `event-${Regulador[pointer]}`;
    NewContainer.classList = "row";
    NewContainer.innerHTML = `
    <!-- Columna para la hora -->
    <div class="col-6">
        <div class="form-group">
            <label for="lhora${Regulador[pointer]}">Hora: </label>
            <input type="time" id="ihora${Regulador[pointer]}" name="ihora${Regulador[pointer]}" class="form-control"required>
        </div>
    </div>

    <!-- Columna para la actividad -->
    <div class="col-6">
        <div class="form-group">
            <label for="actividad${Regulador[pointer]}">Actividad: </label>
            <input type="text" id="iactividad${Regulador[pointer]}" name="iactividad${Regulador[pointer]}" class="form-control"required>
        </div>
    </div>
    `;
    GetContainer.appendChild(NewContainer);
}

function eliminarActividad(pointer) {
    if (Regulador[pointer] !== 1) {
        const GetContainer = document.getElementById(`generated-${pointer}`);
        const DelContainer = GetContainer.querySelector(`div[id="event-${Regulador[pointer]}"]`)
        Regulador[pointer]--;
        GetContainer.removeChild(DelContainer);
    } else {
        alert("NO se puede eliminar mas campos!");
    }
}

function saveData() {
    //* Trackeamos el FormHead
    const CFleft = document.querySelector(`div[class="groupleft"]`);
    const CFrigth = document.querySelector(`div[class="grouprigth"]`);

    //* Obtenemos sus datos
    const days = document.querySelector(`input[id="idias"]`).value;
    const hotel = document.querySelector(`input[id="hotel"]`).value;
    const file = document.querySelector(`input[id="file"]`).value;
    const viajeros = document.querySelector(`input[id="viajeros"]`).value;
    const guia = document.querySelector(`input[id="guia"]`).value;
    const telefono = document.querySelector(`input[id="tlefono"]`).value;

    var dataTimer = [];

    //! validador para verificar los primero 3 campos
    if (days === "" || hotel === "" || viajeros === "") {
        datosCompletos = false;
        alert("Usted debe completar los datos primarios");
    }

    //* Trackeamos la cantidad de datos que se encontro en el form conteinerbody-
    const CountFormulariox = document.querySelectorAll(`form[id^="conteinerbody-"]`);
    var dataTimer = [];

    CountFormulariox.forEach((formElement, index) => {
        index++;
        console.log("Datos del dia: " + index)
        const fechas = document.querySelector(`input[id="ifecha${index}"]`).value;

        const tTracker = document.querySelector(`div[id="generated-${index}"]`);
        const CounrActivid = tTracker.querySelectorAll(`div[id^="event-"]`);
        var dataActived = [];

        CounrActivid.forEach((formElement, rootindex) => {
            rootindex++;
            console.log("trackeamos el evento " + rootindex + " del dia " + index);
            const tracker = tTracker.querySelector(`div[id="event-${rootindex}"]`);

            console.log("recopilamos los datos del evento-" + rootindex + "del dia " + index);
            const hora = tracker.querySelector(`input[id="ihora${rootindex}"]`).value;
            const activi = tracker.querySelector(`input[id="iactividad${rootindex}"]`).value;

            dataActived.push({
                hora: hora,
                actividad: activi
            })
        })

        console.log(dataActived);

        dataTimer.push({
            fecha: fechas,
            data: dataActived
        });
    });

    sessionStorage.setItem(`itinerario`, JSON.stringify({
        days: days,
        file: file,
        hotel: hotel,
        viajeros: viajeros,
        guia: guia,
        telefono: telefono,
        data: dataTimer
    }));
    lookPDF()
}

function lookPDF() {
    //* Eliminamos los campos que esten dentro del trackerOne
    EliminatorId("auto-generated");

    //* Eliminamos los campos que esten dentro del trackertext
    EliminatorId("auto-textgenerated")


    //* Procedemos a recuperar los datos del SessionStorgae
    const bigdata = JSON.parse(sessionStorage.getItem(`itinerario`));

    //* Trackeamos el contenedor auto-textgenerated
    const trackertext = document.getElementById("auto-textgenerated");
    const Nbodcont = document.createElement("div")
    Nbodcont.classList = "bodycont1";
    Nbodcont.innerHTML = `
    <h5>Nombre del programa: ${bigdata.days} dias y ${bigdata.days - 1} noches ${bigdata.hotel}</h5>
    <h5>File: ${bigdata.file}</h5>
    `;
    trackertext.appendChild(Nbodcont);

    const Nbodcontx = document.createElement("div");
    Nbodcontx.classList = "bodycont2";
    Nbodcontx.innerHTML = `
    <h5>Viajeros: ${bigdata.viajeros}</h5>
    `;
    trackertext.appendChild(Nbodcontx);

    //* Trackeamos el contenedor preservado para autogenerar
    const trackerOne = document.getElementById("auto-generated");
    const TGenerador = document.createElement(`table`);
    TGenerador.id = "entablar";
    TGenerador.classList = "entablar";
    TGenerador.border = "1";

    TGenerador.innerHTML = `
    <!-- Encabezado de la tabla | fila 1 -->
    <tr class="thead">
        <th class="ldia">Dia</th>
        <th class="lfecha">Fecha</th>
        <th class="lhora">Hora</th>
        <th class="lactividad">Actividad</th>
    </tr>
    `;

    //! funcion para autogenerar los demas campos
    //* Revisamos la big data interna
    bigdata.data.forEach((forElement, index) => {
        index++; //* autoincrementar el index para tener el valor exacto
        const contrx = forElement.data.length; //* extraemos el tamaño que tiene el campo data
        const hora1 = forElement.data[0].hora; //* extraemos la primera hora para la tabla
        const actividad1 = forElement.data[0].actividad; //* extraemos la primera actividad para la tabla

        Tgeneradorbody = `
        <tr>
            <th id="day-${index}" rowspan="${contrx}">${index}</th>
            <th id="fecha-${index}" rowspan="${contrx}">${forElement.fecha}</th>
            <th id="hora">${hora1}</th>
            <th id="actividad">${actividad1}</th>
        </tr>
        `;

        if (contrx > 1) {
            forElement.data.forEach((forElement2, index2) => {
                if (index2 > 0) {
                    console.log(index2);
                    const horax = forElement2.hora;
                    const actividadx = forElement2.actividad;

                    Tgeneradorsubbody = `
                    <tr>
                        <th id="hora">${horax}</th>
                        <th id="actividad">${actividadx}</th>
                    </tr>
                    `;
                    Tgeneradorbody += Tgeneradorsubbody; //* añadimos el nuevo texto al Tgeneradorbody
                }
            });
        }

        TGenerador.innerHTML += Tgeneradorbody;
    });

    TGeneradorfotter = `
    <tr class="tfut">
        <th class="left-align" id="nombreGuia" colspan="3">Nombre del guia: ${bigdata.guia}</th>
        <th class="rigth-align" id="telefonoguia" colspan="1">Telefono: ${bigdata.telefono}</th>
    </tr>
    `;

    TGenerador.innerHTML += TGeneradorfotter
    trackerOne.appendChild(TGenerador);
}

//* generar el pdf
function downloadPDF() {
    const divdel = document.querySelector('div[id="loaderpreview"]'); // <-- Aquí puedes elegir cualquier elemento del DOM
    html2pdf()
        .set({
            margin: 1,
            filename: 'Itinerario.pdf',
            image: {
                type: 'jpeg',
                quality: 1
            },
            html2canvas: {
                scale: 4, // A mayor escala, mejores gráficos, pero más peso
                letterRendering: true,
            },
            jsPDF: {
                unit: "mm",
                format: "a4",
                orientation: 'portrait', // landscape o portrait
                margin: 0
            }
        })
        .from(divdel)
        .save()
        .catch(err => console.log(err));
}

function EliminatorId(IdString) {
    const DelTrackerID = document.getElementById(`${IdString}`);

    while (DelTrackerID.firstChild) {
        DelTrackerID.removeChild(DelTrackerID.firstChild);
    }
}